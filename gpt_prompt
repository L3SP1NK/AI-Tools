#!/bin/bash
## API reference:
## https://platform.openai.com/docs/api-reference/completions/

api_endpoint='completions'
api_url="https://api.openai.com/v1/${api_endpoint}"
api_key_file="${HOME}/.api/openai.txt"
api_key="$( < "${api_key_file}" )"

if [[ ! -e "${api_key_file}" || -z  "${api_key}" ]]
    then
        echo "API key not found!"
        exit 1
fi

requirements=( jq curl )

for requirement in "${requirements[@]}"
    do
    	if ! which "${requirement}">/dev/null
            then
	    	    echo "${requirement} not found!"
                exit 1
	    fi
done

prompt_text="${1:-$( < /dev/stdin )}"

if [[ -z ${prompt_text} ]]
    then
        echo "No prompt submitted!"
        exit 1
fi

#prompt_text=$( echo "${prompt_text}" | tr -d \"\' | tr -cd '[:print:]' )

role_content='You are a helpful assistant, and you provide short and useful answer in a popup notification.'

timeout='30'
role='system'
echo='true'                 ## show the prompt in response
temp="0"                    ## 2 = random, 0 = focused
max_tokens="4096"           ## max chars.
model="text-davinci-003"    ## -> 3.5?

prompt_request='{"prompt":"'${prompt_text}'","model": "'${model}'", "temperature": "'${temp}'", "max_tokens": "'${max_tokens}'", "echo": "'${echo}'"}'
response=$(curl -s -X POST -H "Content-Type: application/json" -H "Authorization: Bearer ${api_key}" -d "${prompt_request}" ${api_url})
response_text=$(echo $response | jq -r '.choices[0].text' | tail -n +3 2>/dev/null)
echo "$response_text"
